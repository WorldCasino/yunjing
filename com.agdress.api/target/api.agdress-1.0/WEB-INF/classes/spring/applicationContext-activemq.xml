<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">

    <description>spring-jms 配置（ActiveMQ实现）</description>

	<!-- Spring提供的JMS工具类，它可以进行消息发送、接收等 -->
	<bean id="jmsTemplate" class="org.springframework.jms.core.JmsTemplate">
		<!-- 这个connectionFactory对应的是我们定义的Spring提供的那个ConnectionFactory对象 -->
		<property name="connectionFactory" ref="connectionFactory"/>
	</bean>

	<!-- Spring用于管理真正的ConnectionFactory的ConnectionFactory -->
	<bean id="connectionFactory" class="org.springframework.jms.connection.SingleConnectionFactory">
		<!-- 目标ConnectionFactory对应真实的可以产生JMS Connection的ConnectionFactory -->
		<!--<property name="targetConnectionFactory" ref="targetConnectionFactory"/>-->

		<!--使用连接池 节省资源-->
		<property name="targetConnectionFactory" ref="pooledConnectionFactory"/>
	</bean>

	<!--ActiveMQ连接池-->
	<bean id="pooledConnectionFactory" class="org.apache.activemq.pool.PooledConnectionFactory">
		<property name="connectionFactory" ref="targetConnectionFactory"/>
		<property name="maxConnections" value="10"/>
	</bean>

	<!-- 真正可以产生Connection的ConnectionFactory，由对应的 JMS服务厂商提供-->
    <!-- 注意：activemq提供的默认JMS端口61616-->
    <bean id="targetConnectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory">
        <property name="brokerURL" value="${activemq.url}"/>
	</bean>

	<!--这个是队列目的地，点对点的-->
	<bean id="payNotifyQueueDestination" class="org.apache.activemq.command.ActiveMQQueue">
		<constructor-arg>
			<value>agdress_queue</value>
		</constructor-arg>
	</bean>
	<!--这个是主题目的地，一对多的-->
	<bean id="topicDestination" class="org.apache.activemq.command.ActiveMQTopic">
		<constructor-arg value="agdress_topic"/>
	</bean>

	<!-- 消息监听器 -->
	<bean id="consumerMessageListener" class="com.agdress.listener.ConsumerMessageListener"/>
	<!-- 消息监听容器 -->
	<bean id="jmsContainer" class="org.springframework.jms.listener.DefaultMessageListenerContainer">
		<property name="connectionFactory" ref="connectionFactory" />
		<property name="destination" ref="payNotifyQueueDestination" />
		<property name="messageListener" ref="consumerMessageListener" />
	</bean>
</beans>